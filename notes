The source folder or "src" folder is where we will write all of our svelte code .the main.js file is used by svelte so that it can kick start the project,
the app.svelte file is a svelte component and a root component however this is just a dummy component and is always available whenever you first make a
new svelte project.

The .gitignore is for version controll and this is used so that we don't need to upload certain files onto git like node modules, the public builds etc ...

The package.json file is used so that we know what packages we need to install for the project.

We also have a readme file for some helpful tips on how to use svelte.

The rollup.config.js is like a webpack file where all the code is already done to watch out file, configure our code and bundles to our output files
and no changes are needed for it.

When we build our web app, svelte compiles our code and dumps it in the public folder

First of all we need to install the dependencies (command:- npm install)
To view all your changes you need to setup a local development server (command:- npm run dev)

components are building blocks of a website and can be put together and output to the dom for creating a whole website

Examples for a component:

1 - header
2 - footer
3 - contact from
4 - modal
5 - pop up

ETC ...

The .svelte is the extension

App.svelte folder:

Inside each component we have 3 different things 

script for component logic, html that is injected in the DOM and the style for applying styling to our html

The main.js file is used to kick start the app, it has the code that runs first and then set everything up for used.

"
import App from './App.svelte';

const app = new App({
	target: document.body,
	props: {
		name: 'world'
	}
});

export default app;
"

The above code is a basic example for how the svelte targets and injects into the dom or part of the DOM.

The "new App({ ... })" is called an instance and inside this instance is where you will find and object.

generally we use the body tag as most of the content is kept there in an html page


We always pass in function references rather then invoking them in run time

sample of function reference:-
<button on:click="{changeColor}">Button Name</button>

sample of function invoking:-
<button on:click="{changeColor()}">Button Name</button> ------------->  WE DO NOT DO THIS OKAY 

One-way binding:
This is where the change isn't reflected inside the input box
example:
<input type="text" name="" id="" on:input="{typeColor}">


Two-way binding:
This is where the change is reflected on the input box
example:
<input type="text" value="{beltColor}" on:input="{typeColor}">